apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: prometheus-jiva
  labels:
    app: prometheus
    type: workload  
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
        type: workload 
    spec:
      securityContext:
        fsGroup: 1000    
      containers:
        - name: prometheus
          image: prom/prometheus:v2.3.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-storage-volume
              mountPath: /prometheus/          
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
      volumes:
        - name: prometheus-storage-volume
          persistentVolumeClaim:
            claimName: prometheus-volume-claim       
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
---
#PersistentVolumeClaim for prometheus
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: prometheus-volume-claim
  namespace: prometheus-jiva
spec:
  storageClassName: openebs-jiva-default 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5G    
---
# prometheus-service
apiVersion: v1
kind: Service
metadata:
  name: prometheus-jiva-service
  namespace: prometheus-jiva
spec:
  selector: 
    app: prometheus
  type: NodePort
  ports:
    - port: 80 # this Service's port (cluster-internal IP clusterIP)
      targetPort: 9090 # pods expose this port
      nodePort: 32517
      # Note that this Service will be visible as both NodeIP:nodePort and clusterIp:Port

